datasource db {
  provider = "postgresql"
  url      = env("LEDGER_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Reason {
  id        Int      @id @default(autoincrement())
  text      String   @unique @db.VarChar(255)
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  transactions TransactionsReasons[]

  @@map("reasons")
}

model Transaction {
  id        Int      @id @default(autoincrement())
  amount    Decimal  @db.Decimal(15, 2)
  date      DateTime @db.Date
  note      String?  @db.VarChar(511)
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  reasons TransactionsReasons[]
  User    User[]

  @@map("transactions")
}

model TransactionsReasons {
  transactionId Int         @map("transaction_id")
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  reasonId      Int         @map("reason_id")
  reason        Reason      @relation(fields: [reasonId], references: [id])
  updatedAt     DateTime    @default(now()) @map("updated_at")


  @@id([reasonId, transactionId])
  @@map("transactions_reasons")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String?  @map("first_name") @db.VarChar(63)
  lastName  String?  @map("last_name") @db.VarChar(63)
  username  String   @unique @db.VarChar(127)
  email     String   @unique @db.VarChar(127)
  password  String   @unique @db.VarChar(127)
  isActive  Boolean  @default(true) @map("is_active")
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  transactions  Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int         @map("transaction_id")

  @@map("user")
}

model RevokedToken {
  token String   @id @db.VarChar(2023)
  exp   DateTime

  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  
  @@map("revoked_token")
}
